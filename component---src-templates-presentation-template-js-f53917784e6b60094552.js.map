{"version":3,"sources":["webpack:///./src/templates/presentation-template.js","webpack:///./src/components/Post/Content/Content.js","webpack:///./src/components/Post/Content/index.js"],"names":["query","PresentationTemplate","data","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","markdownRemark","frontmatter","postTitle","postDescription","description","metaDescription","html","isIndex","body","Content","className","styles","dangerouslySetInnerHTML","__html"],"mappings":"2FACA,4GAkCaA,EAAK,aAmBHC,UAtCc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAkB,EACOC,cAAtCC,EAD+B,EACtCC,MAA4BC,EADU,EACpBC,SADoB,EAEaL,EAAKM,eAAeC,YAAhEC,EAF+B,EAEtCL,MAA+BM,EAFO,EAEpBC,YACpBC,EAAsC,OAApBF,EAA2BA,EAAkBL,EAC7DQ,EAASZ,EAAKM,eAAdM,KACAT,EAAUH,EAAKM,eAAeC,YAA9BJ,MAER,OACI,kBAAC,IAAD,CAAQA,MAAUK,EAAL,MAAoBN,EAAaQ,YAAaC,GACvD,kBAAC,IAAD,CAASE,SAAO,IAChB,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,CAASC,KAAMF,EAAMT,MAAOA,S,uECZjCY,EAPC,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAMX,EAAT,EAASA,MAAT,OACd,yBAAKa,UAAWC,IAAM,SACpB,wBAAID,UAAWC,IAAM,gBAAqBd,GAC1C,yBAAKa,UAAWC,IAAM,cAAmBC,wBAAyB,CAAEC,OAAQL,OCXhF","file":"component---src-templates-presentation-template-js-f53917784e6b60094552.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Content from '../components/Post/Content';\nimport Page from '../components/Page';\nimport { useSiteMetadata } from '../hooks';\nimport type { MarkdownRemark } from '../types';\n\ntype Props = {\n    data: {\n        markdownRemark: MarkdownRemark\n    }\n};\n\nconst PresentationTemplate = ({ data }: Props) => {\n    const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n    const { title: postTitle, description: postDescription } = data.markdownRemark.frontmatter;\n    const metaDescription = postDescription !== null ? postDescription : siteSubtitle;\n    const { html } = data.markdownRemark;\n    const { title } = data.markdownRemark.frontmatter;\n\n    return (\n        <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription}>\n            <Sidebar isIndex />\n            <Page>\n                <div>\n                    <Content body={html} title={title} />\n                </div>\n            </Page>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n  query PresentationBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n      }\n    }\n  }\n`;\n\nexport default PresentationTemplate;\n","// @flow\nimport React from 'react';\nimport styles from './Content.module.scss';\n\ntype Props = {\n  body: string,\n  title: string\n};\n\nconst Content = ({ body, title }: Props) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// @flow\nexport { default } from './Content';\n"],"sourceRoot":""}