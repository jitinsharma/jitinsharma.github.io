{"version":3,"file":"component---src-templates-categories-template-tsx-859e35c587acf71c198b.js","mappings":"qRAYA,MAqBaA,EAAWA,KACtB,MAAM,MAAEC,EAAK,YAAEC,IAAgBC,EAAAA,EAAAA,KACzBC,EAAY,gBAAgBH,IAElC,OAAOI,EAAAA,cAACC,EAAAA,EAAI,CAACL,MAAOG,EAAWF,YAAaA,GAAe,EAG7D,MA5B+BK,KAC7B,MAAMC,ECFkBC,MAAM,IAAAC,EAC9B,MAAM,kBAAEC,IAAsBC,EAAAA,EAAAA,gBAAc,cAe5C,OAA8B,QAA9BF,EAAOC,EAAkBE,aAAK,IAAAH,EAAAA,EAAI,EAAE,EDdjBD,GAEnB,OACEJ,EAAAA,cAACS,EAAAA,EAAM,KACLT,EAAAA,cAACU,EAAAA,EAAO,MACRV,EAAAA,cAACW,EAAAA,EAAI,CAACf,MAAM,cACVI,EAAAA,cAAA,UACGG,EAAWS,KAAKC,GACfb,EAAAA,cAAA,MAAIc,IAAKD,EAASE,YAChBf,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAI,cAAaC,EAAAA,EAAAA,GAAYL,EAASE,gBACzCF,EAASE,WAAW,KAAGF,EAASM,WAAW,UAM/C,C,uDE7Bb,MAAMD,EAAc,SAACE,GAAW,IAAAC,EAAK,YAAL,IAAXD,IAAAA,EAAc,KAE6C,QAD9EC,EAAAD,EACGE,MAAM,6EAAqE,IAAAD,OAAA,EAD9EA,EAEIT,KAAKW,GAASA,EAAKC,gBACpBC,KAAK,OAAQ,EAAE,C","sources":["webpack://jitinsharma.com/./src/templates/categories-template.tsx","webpack://jitinsharma.com/./src/hooks/use-categories-list.ts","webpack://jitinsharma.com/./src/utils/to-kebab-case.ts"],"sourcesContent":["import React, { type FC } from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport { Meta } from \"@/components/meta\";\nimport { Page } from \"@/components/page\";\nimport { Layout } from \"@/components/layout\";\nimport { Sidebar } from \"@/components/sidebar\";\nimport { useCategoriesList } from \"@/hooks/use-categories-list\";\nimport { useSiteMetadata } from \"@/hooks/use-site-metadata\";\nimport { toKebabCase } from \"@/utils/to-kebab-case\";\n\nconst CategoriesTemplate: FC = () => {\n  const categories = useCategoriesList();\n\n  return (\n    <Layout>\n      <Sidebar />\n      <Page title=\"Categories\">\n        <ul>\n          {categories.map((category) => (\n            <li key={category.fieldValue}>\n              <Link to={`/category/${toKebabCase(category.fieldValue)}/`}>\n                {category.fieldValue} ({category.totalCount})\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </Page>\n    </Layout>\n  );\n};\n\nexport const Head: FC = () => {\n  const { title, description } = useSiteMetadata();\n  const pageTitle = `Categories - ${title}`;\n\n  return <Meta title={pageTitle} description={description} />;\n};\n\nexport default CategoriesTemplate;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\ninterface CategoriesQueryResult {\n  allMarkdownRemark: {\n    group: Array<{\n      fieldValue: string;\n      totalCount: number;\n    }>;\n  };\n}\n\nconst useCategoriesList = () => {\n  const { allMarkdownRemark } = useStaticQuery<CategoriesQueryResult>(graphql`\n    query CategoriesListQuery {\n      allMarkdownRemark(\n        filter: {\n          frontmatter: { template: { eq: \"post\" }, draft: { ne: true } }\n        }\n      ) {\n        group(field: { frontmatter: { category: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  return allMarkdownRemark.group ?? [];\n};\n\nexport { useCategoriesList };\n","const toKebabCase = (str: string = \"\"): string =>\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    ?.map((word) => word.toLowerCase())\n    .join(\"-\") || \"\";\n\nexport { toKebabCase };\n"],"names":["Head","title","description","useSiteMetadata","pageTitle","React","Meta","CategoriesTemplate","categories","useCategoriesList","_allMarkdownRemark$gr","allMarkdownRemark","useStaticQuery","group","Layout","Sidebar","Page","map","category","key","fieldValue","Link","to","toKebabCase","totalCount","str","_str$match","match","word","toLowerCase","join"],"sourceRoot":""}