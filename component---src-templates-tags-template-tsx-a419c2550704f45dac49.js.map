{"version":3,"file":"component---src-templates-tags-template-tsx-a419c2550704f45dac49.js","mappings":"qRAWA,MAqBaA,EAAWA,KACtB,MAAM,MAAEC,EAAK,YAAEC,IAAgBC,EAAAA,EAAAA,KACzBC,EAAY,UAAUH,IAE5B,OAAOI,EAAAA,cAACC,EAAAA,EAAI,CAACL,MAAOG,EAAWF,YAAaA,GAAe,EAG7D,MA5ByBK,KACvB,MAAMC,ECDYC,MAClB,MAAM,kBAAEC,IAAsBC,EAAAA,EAAAA,gBAAc,cAe5C,OAAOD,EAAkBE,OAAS,EAAE,EDfvBH,GAEb,OACEJ,EAAAA,cAACQ,EAAAA,EAAM,KACLR,EAAAA,cAACS,EAAAA,EAAO,MACRT,EAAAA,cAACU,EAAAA,EAAI,CAACd,MAAM,QACVI,EAAAA,cAAA,UACGG,EAAKQ,KAAKC,GACTZ,EAAAA,cAAA,MAAIa,IAAKD,EAAIE,YACXd,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAI,SAAQC,EAAAA,EAAAA,GAAYL,EAAIE,gBAC/BF,EAAIE,WAAW,KAAGF,EAAIM,WAAW,UAMrC,C,uDE5Bb,MAAMD,EAAc,SAACE,GAAW,IAAAC,EAAK,YAAL,IAAXD,IAAAA,EAAc,KAE6C,QAD9EC,EAAAD,EACGE,MAAM,6EAAqE,IAAAD,OAAA,EAD9EA,EAEIT,KAAKW,GAASA,EAAKC,gBACpBC,KAAK,OAAQ,EAAE,C","sources":["webpack://jitinsharma.com/./src/templates/tags-template.tsx","webpack://jitinsharma.com/./src/hooks/use-tags-list.ts","webpack://jitinsharma.com/./src/utils/to-kebab-case.ts"],"sourcesContent":["import React, { type FC } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { Meta } from \"@/components/meta\";\nimport { Page } from \"@/components/page\";\nimport { Layout } from \"@/components/layout\";\nimport { Sidebar } from \"@/components/sidebar\";\nimport { toKebabCase } from \"@/utils/to-kebab-case\";\nimport { useTagsList } from \"@/hooks/use-tags-list\";\nimport { useSiteMetadata } from \"@/hooks/use-site-metadata\";\n\nconst TagsTemplate: FC = () => {\n  const tags = useTagsList();\n\n  return (\n    <Layout>\n      <Sidebar />\n      <Page title=\"Tags\">\n        <ul>\n          {tags.map((tag) => (\n            <li key={tag.fieldValue}>\n              <Link to={`/tag/${toKebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </Page>\n    </Layout>\n  );\n};\n\nexport const Head: FC = () => {\n  const { title, description } = useSiteMetadata();\n  const pageTitle = `Tags - ${title}`;\n\n  return <Meta title={pageTitle} description={description} />;\n};\n\nexport default TagsTemplate;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\ninterface TagsQueryResult {\n  allMarkdownRemark: {\n    group: Array<{\n      fieldValue: string;\n      totalCount: number;\n    }>;\n  };\n}\n\nconst useTagsList = () => {\n  const { allMarkdownRemark } = useStaticQuery<TagsQueryResult>(graphql`\n    query TagsListQuery {\n      allMarkdownRemark(\n        filter: {\n          frontmatter: { template: { eq: \"post\" }, draft: { ne: true } }\n        }\n      ) {\n        group(field: { frontmatter: { tags: SELECT } }) {\n          fieldValue\n          totalCount\n        }\n      }\n    }\n  `);\n\n  return allMarkdownRemark.group || [];\n};\n\nexport { useTagsList };\n","const toKebabCase = (str: string = \"\"): string =>\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    ?.map((word) => word.toLowerCase())\n    .join(\"-\") || \"\";\n\nexport { toKebabCase };\n"],"names":["Head","title","description","useSiteMetadata","pageTitle","React","Meta","TagsTemplate","tags","useTagsList","allMarkdownRemark","useStaticQuery","group","Layout","Sidebar","Page","map","tag","key","fieldValue","Link","to","toKebabCase","totalCount","str","_str$match","match","word","toLowerCase","join"],"sourceRoot":""}