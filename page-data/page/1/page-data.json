{"componentChunkName":"component---src-templates-index-template-js","path":"/page/1","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/lessons-learnt-from-vector-drawables/","categorySlug":"/category/android/"},"frontmatter":{"title":"Lessons learnt from Vector Drawables","date":"2020-03-31","category":"Android","description":"Working safely with Vector Drawables on different API levels."}}},{"node":{"fields":{"slug":"/posts/parsing-kotlin-using-code-kotlin/","categorySlug":"/category/kotlin/"},"frontmatter":{"title":"Parsing Kotlin code using Kotlin","date":"2019-09-10","category":"Kotlin","description":" As Android codebases have moved largely to kotlin, code analysis for kotlin code presents itself as a unique problem with a utterly simple solution."}}},{"node":{"fields":{"slug":"/posts/network-profiler-android-studio/","categorySlug":"/category/android-studio/"},"frontmatter":{"title":"Network Profiler in Android Studio 3.1","date":"2018-03-29","category":"Android Studio","description":"Android Studio 3.1 recently came out of beta. It has a lot of features such as kotlin lint checks, D8 compiler and also a revamped Network Profiler."}}},{"node":{"fields":{"slug":"/posts/targeting-kotlin-for-android-ios/","categorySlug":"/category/kotlin/"},"frontmatter":{"title":"Targeting Kotlin for both Android and iOS","date":"2018-03-21","category":"Kotlin","description":"Kotlin has been traditionally used as a language for JVM based platforms and has become highly popular in Android ecosystem. As the language matures, it is knocking on new frontiers â€” platforms other than JVM, one of them being iOS."}}}]}},"pageContext":{"currentPage":1,"postsLimit":4,"postsOffset":4,"prevPagePath":"/","nextPagePath":"/page/2","hasPrevPage":true,"hasNextPage":true}},"staticQueryHashes":["1122560877","251939775","401334301"]}